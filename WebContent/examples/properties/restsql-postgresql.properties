# Example restSQL properties for PostgreSQL
# Note: Only properties that override defaults need to be defined.

# logging.facility=[log4j,java]
# logging.config=relative/to/classpath
# logging.dir=/absolute/path  - this is only used by the /conf service method to find logs
logging.facility=log4j
logging.config=com/business/config/log4j.properties
logging.dir=/restsql/logs

# sqlresources.dir=/absolute/path
sqlresources.dir=/etc/opt/business/restsql/sqlresources

# security.privileges=/absolute/path
security.privileges=/etc/opt/business/restsql/privileges.properties

# triggers.classpath=/absolute/path
# triggers.definition=/absolute/path
triggers.classpath=/etc/opt/business/restsql/triggers
triggers.definition=/etc/opt/business/restsql/triggers.properties

# database.driverClassName=x.x.x
# database.url=jdbc:etc:etc
# database.user=userName
# database.password=password
database.driverClassName=org.postgresql.Driver
database.url=jdbc:postgresql://localhost:5432/sakila
database.user=postgres
database.password=postgres

# DB-specific implementation classes
org.restsql.core.ColumnMetaData=org.restsql.core.impl.ColumnMetaDataImpl
org.restsql.core.SequenceManager=org.restsql.core.impl.postgresql.PostgreSqlSequenceManager
org.restsql.core.SqlResourceMetaData=org.restsql.core.impl.postgresql.PostgreSqlSqlResourceMetaData
org.restsql.core.SqlBuilder=org.restsql.core.impl.postgresql.PostgreSqlSqlBuilder
org.restsql.tools.ResourceDefinitionGenerator=org.restsql.tools.impl.postgresql.PostgreSqlResourceDefinitionGenerator